; MLXTRAN model, created using IQM Tools
; Date: 2015-Oct-08 17:39
; By:   Henning

; =============================================
DESCRIPTION: FITMODEL_PK__06_COVARIANCE_006
; =============================================
	This model by itself is not simulatable. It requires merging with the dosing
	scheme to allow for simulation (Dose_input2 needs to be defined).
	
	This model is NOT used for the fitting part. It is here because this is what
	is converted to MLXTRAN to serve as the nonlinear basemodel.
	
	This is a template for a popPK basemodel.
	
	Features
	========
	- Central compartment Ac
	- 2 peripheral compartments Ap1 and Ap2
	- Linear clearance from central compartment
	- Saturable (Michaelis-Menten) clearance from central compartment
	- Linear distribution between central and peripheral compartments
	- Allowing for 2 differnt inputs
		    - INPUT1: first order absorption into central compartment
		    - INPUT2: bolus/infusion into central compartment
	
	Limitation
	==========
	    
	Units:
	======
	- No assumption is made regarding the t units
	- Units of INPUT dose and OUTPUT concentration need to match or be 
	  adjusted by FACTOR_UNITS

; =============================================
INPUT:
; =============================================
	parameter = {CL, Vc, Q1, Vp1, Q2, Vp2, Fiv, Fabs1, ka, Tlaginput1, VMAX, KM}

; =============================================
PK:
; =============================================
	FACTOR_UNITS = 1
	Tinfinput2 = 1	; Infusion rate (required)
	compartment(cmt=1, amount=Ad)
	compartment(cmt=2, amount=Ac)
	iv(adm=1, cmt=1, p=FACTOR_UNITS*Fabs1, Tlag=Tlaginput1)
	iv(adm=2, cmt=2, p=FACTOR_UNITS*Fiv)

; =============================================
EQUATION:
; =============================================

	; Always use stiff solver
	; -----------------------
	odeType = stiff

	; Model variables
	; ---------------
	Cc = Ac/Vc

	; Initial conditions
	;------------------
	Ad_0 = 0
	Ac_0 = 0
	Ap1_0 = 0
	Ap2_0 = 0
	
	; Differential equations
	; ----------------------
	ddt_Ad = -ka*Ad
	ddt_Ac = +ka*Ad-CL/Vc*Ac-(VMAX*Ac/Vc)/(KM+Ac/Vc)-Q1/Vc*Ac+Q1/Vp1*Ap1-Q2/Vc*Ac+Q2/Vp2*Ap2
	ddt_Ap1 = +Q1/Vc*Ac-Q1/Vp1*Ap1
	ddt_Ap2 = +Q2/Vc*Ac-Q2/Vp2*Ap2

; =============================================
OUTPUT:
; =============================================
	output = {Cc}
